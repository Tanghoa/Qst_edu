<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recruit.dao.CompanyMapper" >
  <resultMap id="BaseResultMap" type="com.recruit.entity.Company" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="c_real_name" property="cRealName" jdbcType="VARCHAR" />
    <result column="c_name" property="cName" jdbcType="VARCHAR" />
    <result column="c_pass" property="cPass" jdbcType="VARCHAR" />
    <result column="des" property="des" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, c_id, c_real_name, c_name, c_pass, des
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.recruit.entity.CompanyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from company
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.recruit.entity.CompanyExample" >
    delete from company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.recruit.entity.Company" >
    insert into company (id, c_id, c_real_name, 
      c_name, c_pass, des)
    values (#{id,jdbcType=INTEGER}, #{cId,jdbcType=INTEGER}, #{cRealName,jdbcType=VARCHAR}, 
      #{cName,jdbcType=VARCHAR}, #{cPass,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.recruit.entity.Company" >
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cId != null" >
        c_id,
      </if>
      <if test="cRealName != null" >
        c_real_name,
      </if>
      <if test="cName != null" >
        c_name,
      </if>
      <if test="cPass != null" >
        c_pass,
      </if>
      <if test="des != null" >
        des,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cId != null" >
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="cRealName != null" >
        #{cRealName,jdbcType=VARCHAR},
      </if>
      <if test="cName != null" >
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cPass != null" >
        #{cPass,jdbcType=VARCHAR},
      </if>
      <if test="des != null" >
        #{des,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.recruit.entity.CompanyExample" resultType="java.lang.Integer" >
    select count(*) from company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update company
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cId != null" >
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.cRealName != null" >
        c_real_name = #{record.cRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.cName != null" >
        c_name = #{record.cName,jdbcType=VARCHAR},
      </if>
      <if test="record.cPass != null" >
        c_pass = #{record.cPass,jdbcType=VARCHAR},
      </if>
      <if test="record.des != null" >
        des = #{record.des,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update company
    set id = #{record.id,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      c_real_name = #{record.cRealName,jdbcType=VARCHAR},
      c_name = #{record.cName,jdbcType=VARCHAR},
      c_pass = #{record.cPass,jdbcType=VARCHAR},
      des = #{record.des,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.recruit.entity.Company" >
    update company
    <set >
      <if test="cId != null" >
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="cRealName != null" >
        c_real_name = #{cRealName,jdbcType=VARCHAR},
      </if>
      <if test="cName != null" >
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cPass != null" >
        c_pass = #{cPass,jdbcType=VARCHAR},
      </if>
      <if test="des != null" >
        des = #{des,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recruit.entity.Company" >
    update company
    set c_id = #{cId,jdbcType=INTEGER},
      c_real_name = #{cRealName,jdbcType=VARCHAR},
      c_name = #{cName,jdbcType=VARCHAR},
      c_pass = #{cPass,jdbcType=VARCHAR},
      des = #{des,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>